{"version":3,"sources":["app.js","config.js","app.min.js","constant.js","run.js","controllers/main.controller.js","directives/api.error.directive.js","filters/some.filter.js","services/customer.data.service.js"],"names":["angular","module","console","log","config","$stateProvider","$urlRouterProvider","cfpLoadingBarProvider","$locationProvider","spinnerTemplate","otherwise","state","url","abstract","views","header","templateUrl","data-content","footer","controller","container@","state-content","html5Mode","enabled","requireBase","$inject","constant","API_URL","apiUrlValue","runConfig","$browser","$rootScope","$state","$stateParams","baseHref","langArray","langName","langId","run","MainCtrl","$scope","$location","cfpLoadingBar","appConstant","getService","langIdCurrent","langNameCurrent","locationPath","path","split","forEach","value","changeLanguage","language","go","current","name","apiErrorMessage","restrict","transclude","scope","directive","someFilter","filter","$http","$q","$timeout","getDataItems","urlParams","requestUrlStartParamsAPI","anyParams","requestUrlParams","custId","custIdValue","userId","userIdValue","ticket","ticketValue","get","then","results","error","status","factory"],"mappings":"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","file":"app.min.js","sourcesContent":["/**\r\n * Created by Econom Vladimir\r\n */\r\n\r\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('PrepaidSEO', [\r\n            'angular-loading-bar',\r\n            'ui.router',\r\n            'ui.bootstrap',\r\n            'ngAnimate',\r\n            'ngTouch'\r\n        ]);\r\n\r\n    console.log('PrepaidSEO module');\r\n\r\n})();","(function() {\r\n    'use strict';\r\n    angular\r\n        .module('PrepaidSEO')\r\n        .config(config);\r\n\r\n    function config($stateProvider, $urlRouterProvider, cfpLoadingBarProvider, $locationProvider) {\r\n\r\n        console.log('Config');\r\n\r\n        // Loading Bar\r\n        cfpLoadingBarProvider.spinnerTemplate = '' +\r\n            '<div class=\"page-spinner\"><i class=\"fa fa-spinner fa-pulse page-spinner-icon text-primary\"></i></div>';\r\n\r\n        $urlRouterProvider.otherwise('/eng/app-home/');\r\n\r\n        $stateProvider\r\n            .state('root',{\r\n                url: '/:language',\r\n                abstract: true,\r\n                views: {\r\n                    'header': {\r\n                        templateUrl: '/views/header.html'\r\n                    },\r\n                    'data-content':{\r\n                        templateUrl: '/views/data-content.html'\r\n                    },\r\n                    'footer':{\r\n                        templateUrl: '/views/footer.html'\r\n                    }\r\n                }\r\n            })\r\n            .state('root.home', {\r\n                url: '/app-home/',\r\n                controller: 'MainCtrl',\r\n                views: {\r\n                    'container@': {\r\n                        templateUrl: '/index.html'\r\n                    },\r\n                    'state-content':{\r\n                        templateUrl: '/views/index.state.html'\r\n                    }\r\n                }\r\n            })\r\n            .state('root.about', {\r\n                url: '/app-about/',\r\n                controller: 'MainCtrl',\r\n                views: {\r\n                    'container@': {\r\n                        templateUrl: '/index.html'\r\n                    },\r\n                    'state-content':{\r\n                        templateUrl: '/views/about.state.html'\r\n                    }\r\n                }\r\n            })\r\n            .state('root.contacts', {\r\n                url: '/app-contacts/',\r\n                controller: 'MainCtrl',\r\n                views: {\r\n                    'container@': {\r\n                        templateUrl: '/index.html'\r\n                    },\r\n                    'state-content':{\r\n                        templateUrl: '/views/contacts.state.html'\r\n                    }\r\n                }\r\n            });\r\n\r\n        $locationProvider.html5Mode({ enabled: true, requireBase: true });\r\n    }\r\n\r\n})();","/**\r\n * Created by Econom Vladimir\r\n */\r\n\r\n(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('PrepaidSEO', [\r\n            'angular-loading-bar',\r\n            'ui.router',\r\n            'ui.bootstrap',\r\n            'ngAnimate',\r\n            'ngTouch'\r\n        ]);\r\n\r\n    console.log('PrepaidSEO module');\r\n\r\n})();\n(function() {\r\n    'use strict';\r\n    config.$inject = [\"$stateProvider\", \"$urlRouterProvider\", \"cfpLoadingBarProvider\", \"$locationProvider\"];\r\n    angular\r\n        .module('PrepaidSEO')\r\n        .config(config);\r\n\r\n    function config($stateProvider, $urlRouterProvider, cfpLoadingBarProvider, $locationProvider) {\r\n\r\n        console.log('Config');\r\n\r\n        // Loading Bar\r\n        cfpLoadingBarProvider.spinnerTemplate = '' +\r\n            '<div class=\"page-spinner\"><i class=\"fa fa-spinner fa-pulse page-spinner-icon text-primary\"></i></div>';\r\n\r\n        $urlRouterProvider.otherwise('/eng/app-home/');\r\n\r\n        $stateProvider\r\n            .state('root',{\r\n                url: '/:language',\r\n                abstract: true,\r\n                views: {\r\n                    'header': {\r\n                        templateUrl: '/views/header.html'\r\n                    },\r\n                    'data-content':{\r\n                        templateUrl: '/views/data-content.html'\r\n                    },\r\n                    'footer':{\r\n                        templateUrl: '/views/footer.html'\r\n                    }\r\n                }\r\n            })\r\n            .state('root.home', {\r\n                url: '/app-home/',\r\n                controller: 'MainCtrl',\r\n                views: {\r\n                    'container@': {\r\n                        templateUrl: '/index.html'\r\n                    },\r\n                    'state-content':{\r\n                        templateUrl: '/views/index.state.html'\r\n                    }\r\n                }\r\n            })\r\n            .state('root.about', {\r\n                url: '/app-about/',\r\n                controller: 'MainCtrl',\r\n                views: {\r\n                    'container@': {\r\n                        templateUrl: '/index.html'\r\n                    },\r\n                    'state-content':{\r\n                        templateUrl: '/views/about.state.html'\r\n                    }\r\n                }\r\n            })\r\n            .state('root.contacts', {\r\n                url: '/app-contacts/',\r\n                controller: 'MainCtrl',\r\n                views: {\r\n                    'container@': {\r\n                        templateUrl: '/index.html'\r\n                    },\r\n                    'state-content':{\r\n                        templateUrl: '/views/contacts.state.html'\r\n                    }\r\n                }\r\n            });\r\n\r\n        $locationProvider.html5Mode({ enabled: true, requireBase: true });\r\n    }\r\n\r\n})();\n(function() {\r\n    'use strict';\r\n    angular\r\n        .module('PrepaidSEO')\r\n        .constant('appConstant', {\r\n            API_URL: apiUrlValue\r\n        });\r\n\r\n})();\n(function() {\r\n    'use strict';\r\n    runConfig.$inject = [\"$browser\", \"$rootScope\", \"$state\", \"$stateParams\"];\r\n    angular\r\n        .module('PrepaidSEO')\r\n        .run(runConfig);\r\n\r\n    function runConfig($browser, $rootScope, $state, $stateParams) {\r\n\r\n        console.log('Run config');\r\n\r\n        $browser.baseHref = function () {\r\n            return '/';\r\n        };\r\n\r\n        $rootScope.langArray = [\r\n            {\r\n                langName: 'English',\r\n                langId: 'eng'\r\n            },\r\n            {\r\n                langName: 'Deutsch',\r\n                langId: 'de'\r\n            },\r\n            {\r\n                langName: 'Русский',\r\n                langId: 'ru'\r\n            }\r\n        ];\r\n        $rootScope.$state = $state;\r\n        $rootScope.$stateParams = $stateParams;\r\n\r\n    }\r\n\r\n})();\n(function() {\r\n    'use strict';\r\n\r\n    MainCtrl.$inject = [\"$scope\", \"$state\", \"$location\", \"$rootScope\", \"cfpLoadingBar\", \"appConstant\", \"getService\"];\r\n    angular\r\n        .module('PrepaidSEO')\r\n        .controller('MainCtrl', MainCtrl);\r\n\r\n    function MainCtrl (\r\n        $scope,\r\n        $state,\r\n        $location,\r\n        $rootScope,\r\n        cfpLoadingBar,\r\n        appConstant,\r\n        getService) {\r\n\r\n        console.log('Main controller');\r\n\r\n        // Language definition\r\n\r\n        // var setLangCurrent = function () {\r\n        //\r\n        //     $scope.langIdCurrent = null;\r\n        //     $scope.langNameCurrent = null;\r\n        //     $scope.locationPath = [];\r\n        //\r\n        //     $scope.locationPath = $location.path().split(\"/\");\r\n        //     $scope.langIdCurrent = $scope.locationPath[1];\r\n        //     angular.forEach($rootScope.langArray, function(value){\r\n        //         if ($scope.langIdCurrent == value.langId) {\r\n        //             console.log(value.langId);\r\n        //             $scope.langNameCurrent = value.langName;\r\n        //             return $scope.langNameCurrent;\r\n        //         }\r\n        //     });\r\n        // };\r\n        //\r\n        //setLangCurrent();\r\n\r\n        $scope.langIdCurrent = null;\r\n        $scope.langNameCurrent = null;\r\n        $scope.locationPath = [];\r\n\r\n        $scope.locationPath = $location.path().split(\"/\");\r\n        $scope.langIdCurrent = $scope.locationPath[1];\r\n        angular.forEach($rootScope.langArray, function(value){\r\n            if ($scope.langIdCurrent == value.langId) {\r\n                console.log('loaded \"' + value.langId + '\"');\r\n                $scope.langNameCurrent = value.langName;\r\n                return $scope.langNameCurrent;\r\n            }\r\n        });\r\n\r\n        // Set Url For Any \"Data Get Service\"\r\n        var apiUrl = appConstant.API_URL;\r\n\r\n        $scope.changeLanguage = function(language) {\r\n            $state.go($state.current.name, {language: language});\r\n\r\n            angular.forEach($rootScope.langArray, function(value){\r\n                if (language == value.langId) {\r\n                    console.log('switched to \"' + value.langId +'\"');\r\n                    $scope.langNameCurrent = value.langName;\r\n                    return $scope.langNameCurrent;\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n})();\n(function() {\r\n    'use strict';\r\n    angular\r\n        .module('PrepaidSEO')\r\n        .directive('apiErrorMessage', apiErrorMessage);\r\n\r\n    function apiErrorMessage () {\r\n        return {\r\n            restrict: 'E',\r\n            transclude: true,\r\n            scope: {},\r\n            templateUrl: '../views/api-error-message.html'\r\n        };\r\n    }\r\n\r\n})();\n(function() {\r\n    'use strict';\r\n    angular\r\n        .module('PrepaidSEO')\r\n        .filter('someFilter', someFilter);\r\n\r\n    function someFilter (){\r\n        console.log('someFilter');\r\n    }\r\n\r\n})();\n(function() {\r\n    'use strict';\r\n    getService.$inject = [\"$http\", \"$q\", \"$state\", \"$timeout\"];\r\n    angular\r\n        .module('PrepaidSEO')\r\n        .factory('getService', getService);\r\n\r\n    function getService($http, $q, $state, $timeout) {\r\n\r\n        // \"Customer Data Get Service\"\r\n        console.log('Customer Data Get Service Starts');\r\n\r\n        return {\r\n\r\n            getDataItems: function (urlParams){\r\n                \r\n                console.log('Customer Data Get Service Exec');\r\n                \r\n                // Set common url variable for request\r\n                var requestUrlStartParamsAPI = urlParams.anyParams;\r\n                var requestUrlParams = urlParams.custId + urlParams.custIdValue + '&' + urlParams.userId + urlParams.userIdValue + '&' + urlParams.ticket + urlParams.ticketValue;\r\n\r\n                return $http.get(\r\n                        // Get Request For Customer Profile First\r\n                        requestUrlStartParamsAPI + 'AccountData?' + requestUrlParams\r\n                    )\r\n                    .then(\r\n                        function (results) {\r\n                            console.log('Results')\r\n                        }\r\n                    )\r\n                    .catch(\r\n                        function (error) {\r\n                            console.log('Error true');\r\n\r\n                            // Route to error state if we got error response from server (sample)\r\n                            $state.go('error.status');\r\n                            if (error.status == 404) {\r\n                                console.log(error.status);\r\n                            }\r\n                            return error;\r\n                        }\r\n                    );\r\n            }\r\n        };\r\n    }\r\n\r\n})();","(function() {\r\n    'use strict';\r\n    angular\r\n        .module('PrepaidSEO')\r\n        .constant('appConstant', {\r\n            API_URL: apiUrlValue\r\n        });\r\n\r\n})();","(function() {\r\n    'use strict';\r\n    angular\r\n        .module('PrepaidSEO')\r\n        .run(runConfig);\r\n\r\n    function runConfig($browser, $rootScope, $state, $stateParams) {\r\n\r\n        console.log('Run config');\r\n\r\n        $browser.baseHref = function () {\r\n            return '/';\r\n        };\r\n\r\n        $rootScope.langArray = [\r\n            {\r\n                langName: 'English',\r\n                langId: 'eng'\r\n            },\r\n            {\r\n                langName: 'Deutsch',\r\n                langId: 'de'\r\n            },\r\n            {\r\n                langName: 'Русский',\r\n                langId: 'ru'\r\n            }\r\n        ];\r\n        $rootScope.$state = $state;\r\n        $rootScope.$stateParams = $stateParams;\r\n\r\n    }\r\n\r\n})();","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('PrepaidSEO')\r\n        .controller('MainCtrl', MainCtrl);\r\n\r\n    function MainCtrl (\r\n        $scope,\r\n        $state,\r\n        $location,\r\n        $rootScope,\r\n        cfpLoadingBar,\r\n        appConstant,\r\n        getService) {\r\n\r\n        console.log('Main controller');\r\n\r\n        // Language definition\r\n\r\n        // var setLangCurrent = function () {\r\n        //\r\n        //     $scope.langIdCurrent = null;\r\n        //     $scope.langNameCurrent = null;\r\n        //     $scope.locationPath = [];\r\n        //\r\n        //     $scope.locationPath = $location.path().split(\"/\");\r\n        //     $scope.langIdCurrent = $scope.locationPath[1];\r\n        //     angular.forEach($rootScope.langArray, function(value){\r\n        //         if ($scope.langIdCurrent == value.langId) {\r\n        //             console.log(value.langId);\r\n        //             $scope.langNameCurrent = value.langName;\r\n        //             return $scope.langNameCurrent;\r\n        //         }\r\n        //     });\r\n        // };\r\n        //\r\n        //setLangCurrent();\r\n\r\n        $scope.langIdCurrent = null;\r\n        $scope.langNameCurrent = null;\r\n        $scope.locationPath = [];\r\n\r\n        $scope.locationPath = $location.path().split(\"/\");\r\n        $scope.langIdCurrent = $scope.locationPath[1];\r\n        angular.forEach($rootScope.langArray, function(value){\r\n            if ($scope.langIdCurrent == value.langId) {\r\n                console.log('loaded \"' + value.langId + '\"');\r\n                $scope.langNameCurrent = value.langName;\r\n                return $scope.langNameCurrent;\r\n            }\r\n        });\r\n\r\n        // Set Url For Any \"Data Get Service\"\r\n        var apiUrl = appConstant.API_URL;\r\n\r\n        $scope.changeLanguage = function(language) {\r\n            $state.go($state.current.name, {language: language});\r\n\r\n            angular.forEach($rootScope.langArray, function(value){\r\n                if (language == value.langId) {\r\n                    console.log('switched to \"' + value.langId +'\"');\r\n                    $scope.langNameCurrent = value.langName;\r\n                    return $scope.langNameCurrent;\r\n                }\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n})();","(function() {\r\n    'use strict';\r\n    angular\r\n        .module('PrepaidSEO')\r\n        .directive('apiErrorMessage', apiErrorMessage);\r\n\r\n    function apiErrorMessage () {\r\n        return {\r\n            restrict: 'E',\r\n            transclude: true,\r\n            scope: {},\r\n            templateUrl: '../views/api-error-message.html'\r\n        };\r\n    }\r\n\r\n})();","(function() {\r\n    'use strict';\r\n    angular\r\n        .module('PrepaidSEO')\r\n        .filter('someFilter', someFilter);\r\n\r\n    function someFilter (){\r\n        console.log('someFilter');\r\n    }\r\n\r\n})();","(function() {\r\n    'use strict';\r\n    angular\r\n        .module('PrepaidSEO')\r\n        .factory('getService', getService);\r\n\r\n    function getService($http, $q, $state, $timeout) {\r\n\r\n        // \"Customer Data Get Service\"\r\n        console.log('Customer Data Get Service Starts');\r\n\r\n        return {\r\n\r\n            getDataItems: function (urlParams){\r\n                \r\n                console.log('Customer Data Get Service Exec');\r\n                \r\n                // Set common url variable for request\r\n                var requestUrlStartParamsAPI = urlParams.anyParams;\r\n                var requestUrlParams = urlParams.custId + urlParams.custIdValue + '&' + urlParams.userId + urlParams.userIdValue + '&' + urlParams.ticket + urlParams.ticketValue;\r\n\r\n                return $http.get(\r\n                        // Get Request For Customer Profile First\r\n                        requestUrlStartParamsAPI + 'AccountData?' + requestUrlParams\r\n                    )\r\n                    .then(\r\n                        function (results) {\r\n                            console.log('Results')\r\n                        }\r\n                    )\r\n                    .catch(\r\n                        function (error) {\r\n                            console.log('Error true');\r\n\r\n                            // Route to error state if we got error response from server (sample)\r\n                            $state.go('error.status');\r\n                            if (error.status == 404) {\r\n                                console.log(error.status);\r\n                            }\r\n                            return error;\r\n                        }\r\n                    );\r\n            }\r\n        };\r\n    }\r\n\r\n})();"],"sourceRoot":"/source/"}